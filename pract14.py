import numpy as np
from IPython.display import display
# Pega aquí los datos de las columnas tal cual están
datos = """
 99.974     1.000   0.00000   0.00000    5.167    1.000    1.000    1.000 
   99.033     1.000   0.00848   0.08796    5.088    1.000    1.000    1.000 
   98.152     1.000   0.01687   0.16022    5.009    1.000    1.000    1.000 
   97.329     1.000   0.02518   0.22055    4.931    1.000    1.000    1.000 
   96.558     1.000   0.03340   0.27165    4.853    1.001    1.000    1.000 
   95.834     1.000   0.04154   0.31542    4.776    1.001    1.000    1.000 
   95.155     1.000   0.04960   0.35331    4.700    1.001    1.000    1.000 
   94.517     1.000   0.05758   0.38640    4.625    1.002    1.000    1.000 
   93.916     1.000   0.06547   0.41553    4.551    1.002    1.000    1.000 
   93.350     1.000   0.07329   0.44134    4.479    1.003    1.000    1.000 
   92.816     1.000   0.08104   0.46436    4.407    1.003    1.000    1.000 
   92.313     1.000   0.08870   0.48500    4.337    1.004    1.000    1.000 
   91.837     1.000   0.09629   0.50360    4.268    1.005    1.000    1.000 
   91.387     1.000   0.10381   0.52044    4.200    1.005    1.000    1.000 
   90.961     1.000   0.11125   0.53575    4.133    1.006    1.000    1.000 
   90.558     1.000   0.11863   0.54973    4.068    1.007    1.000    1.000 
   90.176     1.000   0.12593   0.56252    4.004    1.008    1.000    1.000 
   89.813     1.000   0.13316   0.57428    3.941    1.009    1.000    1.000 
   89.469     1.000   0.14032   0.58512    3.880    1.010    1.000    1.000 
   89.142     1.000   0.14742   0.59514    3.820    1.011    1.000    1.000 
   88.831     1.000   0.15445   0.60442    3.761    1.012    1.000    1.000 
   88.535     1.000   0.16141   0.61305    3.703    1.014    1.000    1.000 
   88.254     1.000   0.16831   0.62108    3.647    1.015    1.000    1.000 
   87.985     1.000   0.17515   0.62857    3.592    1.016    1.000    1.000 
   87.729     1.000   0.18192   0.63557    3.538    1.018    1.000    1.000 
   87.485     1.000   0.18863   0.64214    3.486    1.019    1.000    1.000 
   87.252     1.000   0.19527   0.64829    3.434    1.021    1.000    1.000 
   87.030     1.000   0.20186   0.65409    3.384    1.022    1.000    1.000 
   86.817     1.000   0.20839   0.65954    3.335    1.024    1.000    1.000 
   86.613     1.000   0.21486   0.66468    3.287    1.025    1.000    1.000 
   86.419     1.000   0.22127   0.66954    3.240    1.027    1.000    1.000 
   86.232     1.000   0.22762   0.67414    3.194    1.029    1.000    1.000 
   86.054     1.000   0.23392   0.67849    3.149    1.031    1.000    1.000 
   85.882     1.000   0.24016   0.68263    3.106    1.032    1.000    1.000 
   85.718     1.000   0.24635   0.68655    3.063    1.034    1.000    1.000 
   85.561     1.000   0.25248   0.69028    3.021    1.036    1.000    1.000 
   85.409     1.000   0.25855   0.69384    2.980    1.038    1.000    1.000 
   85.264     1.000   0.26458   0.69722    2.940    1.040    1.000    1.000 
   85.124     1.000   0.27055   0.70046    2.901    1.042    1.000    1.000 
   84.990     1.000   0.27647   0.70354    2.863    1.044    1.000    1.000 
   84.860     1.000   0.28234   0.70650    2.826    1.046    1.000    1.000 
   84.736     1.000   0.28816   0.70933    2.789    1.049    1.000    1.000 
   84.616     1.000   0.29393   0.71204    2.754    1.051    1.000    1.000 
   84.500     1.000   0.29966   0.71464    2.719    1.053    1.000    1.000 
   84.389     1.000   0.30533   0.71713    2.685    1.055    1.000    1.000 
   84.281     1.000   0.31095   0.71953    2.652    1.058    1.000    1.000 
   84.177     1.000   0.31653   0.72184    2.619    1.060    1.000    1.000 
   84.077     1.000   0.32206   0.72406    2.587    1.063    1.000    1.000 
   83.980     1.000   0.32755   0.72621    2.556    1.065    1.000    1.000 
   83.886     1.000   0.33299   0.72827    2.526    1.068    1.000    1.000 
   83.795     1.000   0.33838   0.73027    2.496    1.070    1.000    1.000 
   83.708     1.000   0.34374   0.73219    2.467    1.073    1.000    1.000 
   83.623     1.000   0.34904   0.73406    2.439    1.075    1.000    1.000 
   83.540     1.000   0.35431   0.73586    2.411    1.078    1.000    1.000 
   83.460     1.000   0.35953   0.73761    2.384    1.081    1.000    1.000 
   83.383     1.000   0.36471   0.73930    2.357    1.084    1.000    1.000 
   83.308     1.000   0.36985   0.74094    2.331    1.086    1.000    1.000 
   83.234     1.000   0.37494   0.74254    2.305    1.089    1.000    1.000 
   83.164     1.000   0.38000   0.74409    2.280    1.092    1.000    1.000 
   83.095     1.000   0.38501   0.74560    2.256    1.095    1.000    1.000 
   83.027     1.000   0.38999   0.74706    2.232    1.098    1.000    1.000 
   82.962     1.000   0.39493   0.74849    2.209    1.101    1.000    1.000 
   82.899     1.000   0.39982   0.74988    2.186    1.104    1.000    1.000 
   82.837     1.000   0.40468   0.75124    2.163    1.107    1.000    1.000 
   82.776     1.000   0.40950   0.75256    2.141    1.110    1.000    1.000 
   82.717     1.000   0.41429   0.75385    2.120    1.113    1.000    1.000 
   82.660     1.000   0.41904   0.75512    2.099    1.116    1.000    1.000 
   82.604     1.000   0.42375   0.75635    2.078    1.119    1.000    1.000 
   82.549     1.000   0.42842   0.75756    2.058    1.123    1.000    1.000 
   82.496     1.000   0.43306   0.75875    2.038    1.126    1.000    1.000 
   82.443     1.000   0.43766   0.75991    2.019    1.129    1.000    1.000 
   82.392     1.000   0.44223   0.76104    2.000    1.133    1.000    1.000 
   82.342     1.000   0.44677   0.76216    1.981    1.136    1.000    1.000 
   82.293     1.000   0.45127   0.76326    1.963    1.139    1.000    1.000 
   82.245     1.000   0.45573   0.76433    1.945    1.143    1.000    1.000 
   82.198     1.000   0.46017   0.76539    1.928    1.146    1.000    1.000 
   82.152     1.000   0.46457   0.76643    1.911    1.150    1.000    1.000 
   82.107     1.000   0.46893   0.76746    1.894    1.153    1.000    1.000 
   82.062     1.000   0.47327   0.76847    1.878    1.157    1.000    1.000 
   82.019     1.000   0.47757   0.76946    1.861    1.160    1.000    1.000 
   81.976     1.000   0.48184   0.77044    1.846    1.164    1.000    1.000 
   81.934     1.000   0.48608   0.77141    1.830    1.168    1.000    1.000 
   81.892     1.000   0.49029   0.77236    1.815    1.171    1.000    1.000 
   81.851     1.000   0.49447   0.77330    1.800    1.175    1.000    1.000 
   81.812     1.000   0.49862   0.77424    1.785    1.179    1.000    1.000 
   81.772     1.000   0.50274   0.77516    1.771    1.182    1.000    1.000 
   81.733     1.000   0.50683   0.77607    1.757    1.186    1.000    1.000 
   81.695     1.000   0.51089   0.77697    1.743    1.190    1.000    1.000 
   81.657     1.000   0.51492   0.77786    1.730    1.194    1.000    1.000 
   81.620     1.000   0.51892   0.77874    1.716    1.198    1.000    1.000 
   81.583     1.000   0.52289   0.77962    1.703    1.202    1.000    1.000 
   81.547     1.000   0.52684   0.78049    1.690    1.206    1.000    1.000 
   81.511     1.000   0.53076   0.78135    1.678    1.210    1.000    1.000 
   81.476     1.000   0.53465   0.78221    1.666    1.214    1.000    1.000 
   81.441     1.000   0.53851   0.78305    1.654    1.218    1.000    1.000 
   81.407     1.000   0.54235   0.78390    1.642    1.222    1.000    1.000 
   81.372     1.000   0.54616   0.78473    1.630    1.226    1.000    1.000 
   81.339     1.000   0.54994   0.78557    1.619    1.230    1.000    1.000 
   81.305     1.000   0.55370   0.78640    1.607    1.234    1.000    1.000 
   81.272     1.000   0.55743   0.78722    1.596    1.238    1.000    1.000 
   81.240     1.000   0.56114   0.78804    1.586    1.243    1.000    1.000 
   81.207     1.000   0.56482   0.78886    1.575    1.247    1.000    1.000 
   81.175     1.000   0.56848   0.78967    1.565    1.251    1.000    1.000 
   81.144     1.000   0.57211   0.79048    1.554    1.255    1.000    1.000 
   81.112     1.000   0.57572   0.79128    1.544    1.260    1.000    1.000 
   81.081     1.000   0.57930   0.79209    1.534    1.264    1.000    1.000 
   81.050     1.000   0.58286   0.79289    1.525    1.269    1.000    1.000 
   81.020     1.000   0.58639   0.79369    1.515    1.273    1.000    1.000 
   80.989     1.000   0.58990   0.79449    1.506    1.277    1.000    1.000 
   80.959     1.000   0.59339   0.79528    1.497    1.282    1.000    1.000 
   80.929     1.000   0.59686   0.79608    1.488    1.286    1.000    1.000 
   80.900     1.000   0.60030   0.79687    1.479    1.291    1.000    1.000 
   80.870     1.000   0.60372   0.79767    1.470    1.295    1.000    1.000 
   80.841     1.000   0.60712   0.79846    1.462    1.300    1.000    1.000 
   80.812     1.000   0.61049   0.79925    1.453    1.305    1.000    1.000 
   80.783     1.000   0.61385   0.80004    1.445    1.309    1.000    1.000 
   80.755     1.000   0.61718   0.80083    1.437    1.314    1.000    1.000 
   80.726     1.000   0.62049   0.80162    1.429    1.319    1.000    1.000 
   80.698     1.000   0.62378   0.80242    1.421    1.323    1.000    1.000 
   80.670     1.000   0.62705   0.80321    1.413    1.328    1.000    1.000 
   80.642     1.000   0.63029   0.80400    1.406    1.333    1.000    1.000 
   80.615     1.000   0.63352   0.80479    1.398    1.337    1.000    1.000 
   80.587     1.000   0.63672   0.80558    1.391    1.342    1.000    1.000 
   80.560     1.000   0.63991   0.80638    1.384    1.347    1.000    1.000 
   80.533     1.000   0.64307   0.80717    1.377    1.352    1.000    1.000 
   80.506     1.000   0.64622   0.80797    1.370    1.357    1.000    1.000 
   80.479     1.000   0.64935   0.80877    1.363    1.362    1.000    1.000 
   80.452     1.000   0.65245   0.80956    1.356    1.367    1.000    1.000 
   80.426     1.000   0.65554   0.81036    1.350    1.372    1.000    1.000 
   80.399     1.000   0.65861   0.81117    1.343    1.377    1.000    1.000 
   80.373     1.000   0.66165   0.81197    1.337    1.382    1.000    1.000 
   80.347     1.000   0.66468   0.81277    1.331    1.387    1.000    1.000 
   80.321     1.000   0.66769   0.81358    1.325    1.392    1.000    1.000 
   80.295     1.000   0.67069   0.81439    1.319    1.397    1.000    1.000 
   80.269     1.000   0.67366   0.81520    1.313    1.402    1.000    1.000 
   80.244     1.000   0.67662   0.81601    1.307    1.407    1.000    1.000 
   80.218     1.000   0.67955   0.81683    1.301    1.412    1.000    1.000 
   80.193     1.000   0.68247   0.81765    1.295    1.417    1.000    1.000 
   80.168     1.000   0.68538   0.81847    1.290    1.423    1.000    1.000 
   80.143     1.000   0.68826   0.81929    1.284    1.428    1.000    1.000 
   80.118     1.000   0.69113   0.82011    1.279    1.433    1.000    1.000 
   80.093     1.000   0.69398   0.82094    1.274    1.438    1.000    1.000 
   80.069     1.000   0.69681   0.82177    1.269    1.444    1.000    1.000 
   80.044     1.000   0.69963   0.82260    1.263    1.449    1.000    1.000 
   80.020     1.000   0.70243   0.82344    1.258    1.454    1.000    1.000 
   79.995     1.000   0.70521   0.82428    1.253    1.460    1.000    1.000 
   79.971     1.000   0.70798   0.82512    1.249    1.465    1.000    1.000 
   79.947     1.000   0.71073   0.82596    1.244    1.470    1.000    1.000 
   79.923     1.000   0.71346   0.82681    1.239    1.476    1.000    1.000 
   79.899     1.000   0.71618   0.82766    1.235    1.481    1.000    1.000 
   79.876     1.000   0.71888   0.82851    1.230    1.487    1.000    1.000 
   79.852     1.000   0.72157   0.82937    1.226    1.492    1.000    1.000 
   79.829     1.000   0.72424   0.83023    1.221    1.498    1.000    1.000 
   79.805     1.000   0.72690   0.83109    1.217    1.503    1.000    1.000 
   79.782     1.000   0.72954   0.83196    1.213    1.509    1.000    1.000 
   79.759     1.000   0.73216   0.83283    1.208    1.514    1.000    1.000 
   79.736     1.000   0.73477   0.83370    1.204    1.520    1.000    1.000 
   79.714     1.000   0.73737   0.83458    1.200    1.526    1.000    1.000 
   79.691     1.000   0.73995   0.83546    1.196    1.531    1.000    1.000 
   79.668     1.000   0.74251   0.83634    1.192    1.537    1.000    1.000 
   79.646     1.000   0.74507   0.83723    1.188    1.543    1.000    1.000 
   79.624     1.000   0.74760   0.83812    1.185    1.548    1.000    1.000 
   79.602     1.000   0.75012   0.83901    1.181    1.554    1.000    1.000 
   79.579     1.000   0.75263   0.83991    1.177    1.560    1.000    1.000 
   79.558     1.000   0.75513   0.84081    1.174    1.566    1.000    1.000 
   79.536     1.000   0.75761   0.84172    1.170    1.571    1.000    1.000 
   79.514     1.000   0.76007   0.84263    1.167    1.577    1.000    1.000 
   79.493     1.000   0.76253   0.84354    1.163    1.583    1.000    1.000 
   79.471     1.000   0.76497   0.84445    1.160    1.589    1.000    1.000 
   79.450     1.000   0.76739   0.84537    1.157    1.595    1.000    1.000 
   79.429     1.000   0.76980   0.84630    1.153    1.601    1.000    1.000 
   79.408     1.000   0.77220   0.84723    1.150    1.607    1.000    1.000 
   79.387     1.000   0.77459   0.84816    1.147    1.613    1.000    1.000 
   79.366     1.000   0.77696   0.84909    1.144    1.618    1.000    1.000 
   79.346     1.000   0.77932   0.85003    1.141    1.624    1.000    1.000 
   79.325     1.000   0.78167   0.85097    1.138    1.630    1.000    1.000 
   79.305     1.000   0.78400   0.85192    1.135    1.636    1.000    1.000 
   79.285     1.000   0.78632   0.85287    1.132    1.642    1.000    1.000 
   79.265     1.000   0.78863   0.85383    1.129    1.649    1.000    1.000 
   79.245     1.000   0.79093   0.85479    1.126    1.655    1.000    1.000 
   79.226     1.000   0.79321   0.85575    1.123    1.661    1.000    1.000 
   79.206     1.000   0.79548   0.85672    1.121    1.667    1.000    1.000 
   79.187     1.000   0.79774   0.85769    1.118    1.673    1.000    1.000 
   79.167     1.000   0.79999   0.85866    1.115    1.679    1.000    1.000 
   79.148     1.000   0.80223   0.85964    1.113    1.685    1.000    1.000 
   79.129     1.000   0.80445   0.86062    1.110    1.691    1.000    1.000 
   79.111     1.000   0.80666   0.86161    1.108    1.698    1.000    1.000 
   79.092     1.000   0.80887   0.86260    1.105    1.704    1.000    1.000 
   79.073     1.000   0.81105   0.86360    1.103    1.710    1.000    1.000 
   79.055     1.000   0.81323   0.86460    1.101    1.716    1.000    1.000 
   79.037     1.000   0.81540   0.86560    1.098    1.723    1.000    1.000 
   79.019     1.000   0.81755   0.86661    1.096    1.729    1.000    1.000 
   79.001     1.000   0.81970   0.86762    1.094    1.735    1.000    1.000 
   78.983     1.000   0.82183   0.86863    1.092    1.741    1.000    1.000 
   78.966     1.000   0.82395   0.86965    1.089    1.748    1.000    1.000 
   78.948     1.000   0.82606   0.87068    1.087    1.754    1.000    1.000 
   78.931     1.000   0.82816   0.87171    1.085    1.760    1.000    1.000 
   78.914     1.000   0.83025   0.87274    1.083    1.767    1.000    1.000 
   78.897     1.000   0.83233   0.87377    1.081    1.773    1.000    1.000 
   78.881     1.000   0.83440   0.87481    1.079    1.780    1.000    1.000 
   78.864     1.000   0.83645   0.87586    1.077    1.786    1.000    1.000 
   78.848     1.000   0.83850   0.87691    1.075    1.793    1.000    1.000 
   78.832     1.000   0.84054   0.87796    1.073    1.799    1.000    1.000 
   78.816     1.000   0.84256   0.87901    1.072    1.806    1.000    1.000 
   78.800     1.000   0.84458   0.88008    1.070    1.812    1.000    1.000 
   78.784     1.000   0.84659   0.88114    1.068    1.819    1.000    1.000 
   78.769     1.000   0.84858   0.88221    1.066    1.825    1.000    1.000 
   78.753     1.000   0.85057   0.88328    1.064    1.832    1.000    1.000 
   78.738     1.000   0.85254   0.88436    1.063    1.838    1.000    1.000 
   78.723     1.000   0.85451   0.88544    1.061    1.845    1.000    1.000 
   78.709     1.000   0.85646   0.88653    1.060    1.851    1.000    1.000 
   78.694     1.000   0.85841   0.88762    1.058    1.858    1.000    1.000 
   78.680     1.000   0.86035   0.88871    1.056    1.865    1.000    1.000 
   78.666     1.000   0.86228   0.88981    1.055    1.871    1.000    1.000 
   78.652     1.000   0.86419   0.89091    1.053    1.878    1.000    1.000 
   78.638     1.000   0.86610   0.89201    1.052    1.885    1.000    1.000 
   78.624     1.000   0.86800   0.89312    1.050    1.891    1.000    1.000 
   78.611     1.000   0.86989   0.89424    1.049    1.898    1.000    1.000 
   78.598     1.000   0.87177   0.89536    1.048    1.905    1.000    1.000 
   78.585     1.000   0.87364   0.89648    1.046    1.911    1.000    1.000 
   78.572     1.000   0.87551   0.89760    1.045    1.918    1.000    1.000 
   78.559     1.000   0.87736   0.89873    1.044    1.925    1.000    1.000 
   78.547     1.000   0.87920   0.89987    1.042    1.932    1.000    1.000 
   78.535     1.000   0.88104   0.90101    1.041    1.938    1.000    1.000 
   78.523     1.000   0.88287   0.90215    1.040    1.945    1.000    1.000 
   78.511     1.000   0.88468   0.90329    1.038    1.952    1.000    1.000 
   78.499     1.000   0.88649   0.90445    1.037    1.959    1.000    1.000 
   78.488     1.000   0.88829   0.90560    1.036    1.966    1.000    1.000 
   78.477     1.000   0.89009   0.90676    1.035    1.973    1.000    1.000 
   78.466     1.000   0.89187   0.90792    1.034    1.979    1.000    1.000 
   78.455     1.000   0.89364   0.90909    1.033    1.986    1.000    1.000 
   78.444     1.000   0.89541   0.91026    1.032    1.993    1.000    1.000 
   78.434     1.000   0.89717   0.91143    1.031    2.000    1.000    1.000 
   78.424     1.000   0.89892   0.91261    1.030    2.007    1.000    1.000 
   78.414     1.000   0.90066   0.91379    1.029    2.014    1.000    1.000 
   78.404     1.000   0.90240   0.91498    1.028    2.021    1.000    1.000 
   78.395     1.000   0.90412   0.91617    1.027    2.028    1.000    1.000 
   78.386     1.000   0.90584   0.91736    1.026    2.035    1.000    1.000 
   78.377     1.000   0.90755   0.91856    1.025    2.042    1.000    1.000 
   78.368     1.000   0.90925   0.91976    1.024    2.049    1.000    1.000 
   78.360     1.000   0.91095   0.92097    1.023    2.056    1.000    1.000 
   78.351     1.000   0.91263   0.92218    1.022    2.063    1.000    1.000 
   78.343     1.000   0.91431   0.92339    1.021    2.070    1.000    1.000 
   78.335     1.000   0.91598   0.92461    1.020    2.077    1.000    1.000 
   78.328     1.000   0.91764   0.92583    1.020    2.084    1.000    1.000 
   78.320     1.000   0.91930   0.92705    1.019    2.091    1.000    1.000 
   78.313     1.000   0.92095   0.92828    1.018    2.098    1.000    1.000 
   78.306     1.000   0.92259   0.92952    1.017    2.105    1.000    1.000 
   78.300     1.000   0.92422   0.93075    1.017    2.112    1.000    1.000 
   78.293     1.000   0.92585   0.93199    1.016    2.119    1.000    1.000 
   78.287     1.000   0.92746   0.93324    1.015    2.126    1.000    1.000 
   78.281     1.000   0.92908   0.93449    1.015    2.133    1.000    1.000 
   78.275     1.000   0.93068   0.93574    1.014    2.140    1.000    1.000 
   78.270     1.000   0.93228   0.93699    1.013    2.148    1.000    1.000 
   78.264     1.000   0.93386   0.93825    1.013    2.155    1.000    1.000 
   78.259     1.000   0.93545   0.93951    1.012    2.162    1.000    1.000 
   78.255     1.000   0.93702   0.94078    1.012    2.169    1.000    1.000 
   78.250     1.000   0.93859   0.94205    1.011    2.176    1.000    1.000 
   78.246     1.000   0.94015   0.94333    1.010    2.183    1.000    1.000 
   78.242     1.000   0.94171   0.94460    1.010    2.191    1.000    1.000 
   78.238     1.000   0.94325   0.94588    1.009    2.198    1.000    1.000 
   78.235     1.000   0.94479   0.94717    1.009    2.205    1.000    1.000 
   78.231     1.000   0.94633   0.94846    1.008    2.212    1.000    1.000 
   78.228     1.000   0.94785   0.94975    1.008    2.219    1.000    1.000 
   78.226     1.000   0.94938   0.95105    1.007    2.227    1.000    1.000 
   78.223     1.000   0.95089   0.95235    1.007    2.234    1.000    1.000 
   78.221     1.000   0.95240   0.95365    1.007    2.241    1.000    1.000 
   78.219     1.000   0.95390   0.95496    1.006    2.248    1.000    1.000 
   78.217     1.000   0.95539   0.95627    1.006    2.256    1.000    1.000 
   78.216     1.000   0.95688   0.95758    1.005    2.263    1.000    1.000 
   78.215     1.000   0.95836   0.95890    1.005    2.270    1.000    1.000 
   78.214     1.000   0.95983   0.96022    1.005    2.278    1.000    1.000 
   78.213     1.000   0.96130   0.96154    1.004    2.285    1.000    1.000 
   78.213     1.000   0.96277   0.96287    1.004    2.292    1.000    1.000 
   78.213     1.000   0.96422   0.96420    1.004    2.299    1.000    1.000 
   78.213     1.000   0.96567   0.96554    1.003    2.307    1.000    1.000 
   78.213     1.000   0.96711   0.96688    1.003    2.314    1.000    1.000 
   78.214     1.000   0.96855   0.96822    1.003    2.321    1.000    1.000 
   78.215     1.000   0.96998   0.96956    1.003    2.329    1.000    1.000 
   78.216     1.000   0.97141   0.97091    1.002    2.336    1.000    1.000 
   78.218     1.000   0.97283   0.97226    1.002    2.343    1.000    1.000 
   78.220     1.000   0.97424   0.97362    1.002    2.351    1.000    1.000 
   78.222     1.000   0.97565   0.97498    1.002    2.358    1.000    1.000 
   78.224     1.000   0.97705   0.97634    1.002    2.366    1.000    1.000 
   78.227     1.000   0.97844   0.97771    1.001    2.373    1.000    1.000 
   78.230     1.000   0.97983   0.97908    1.001    2.380    1.000    1.000 
   78.233     1.000   0.98122   0.98045    1.001    2.388    1.000    1.000 
   78.237     1.000   0.98260   0.98182    1.001    2.395    1.000    1.000 
   78.240     1.000   0.98397   0.98320    1.001    2.403    1.000    1.000 
   78.245     1.000   0.98533   0.98458    1.001    2.410    1.000    1.000 
   78.249     1.000   0.98670   0.98597    1.001    2.417    1.000    1.000 
   78.254     1.000   0.98805   0.98736    1.000    2.425    1.000    1.000 
   78.259     1.000   0.98940   0.98875    1.000    2.432    1.000    1.000 
   78.264     1.000   0.99074   0.99015    1.000    2.440    1.000    1.000 
   78.269     1.000   0.99208   0.99154    1.000    2.447    1.000    1.000 
   78.275     1.000   0.99342   0.99295    1.000    2.455    1.000    1.000 
   78.281     1.000   0.99474   0.99435    1.000    2.462    1.000    1.000 
   78.288     1.000   0.99607   0.99576    1.000    2.469    1.000    1.000 
   78.295     1.000   0.99738   0.99717    1.000    2.477    1.000    1.000 
   78.302     1.000   0.99869   0.99858    1.000    2.484    1.000    1.000 
   78.309     1.000   1.00000   1.00000    1.000    2.492    1.000    1.000 

""" # Añade todos los datos aquí

# Convertir el bloque de datos en una matriz de numpy
# Primero, convertir el bloque de datos a una lista de líneas, y luego a una lista de números
lineas = datos.strip().split('\n')
datos_limpios = [list(map(float, linea.split())) for linea in lineas]

# Convertir los datos a una matriz numpy
matriz = np.array(datos_limpios)

# Extraer cada columna como un vector (lista)
T = matriz[:, 0]
P = matriz[:, 1]
x1 = matriz[:, 2]
y1 = matriz[:, 3]
g1 = matriz[:, 4]
g2 = matriz[:, 5]
phi1 = matriz[:, 6]
phi2 = matriz[:, 7]
## componente 1 ethanol

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np  
#densidad destilado y residuo
Ddestilado=0.825
DResiduo=0.996
#Fracciones masicas
xi_destilado = [0.86, 0.87]
densidad_destilado = [0.82405, 0.82148]

xi_residuo = [0.0, 0.01]
densidad_residuo = [0.99708, 0.99568]
def interpolar_lineal(x1, y1, x2, y2, x_interpolado):
    return y1 + ((x_interpolado - x1) / (x2 - x1)) * (y2 - y1)
x_destilado = interpolar_lineal(densidad_destilado[0], xi_destilado[0], densidad_destilado[1], xi_destilado[1], Ddestilado)
x_residuo = interpolar_lineal(densidad_residuo[0], xi_residuo[0], densidad_residuo[1], xi_residuo[1], DResiduo)
tabla_fracciones_masicas = pd.DataFrame({
    'Componente': ['Destilado','Residuo'],
    'Fracción másica': [x_destilado, x_residuo]
})
styled_df = tabla_fracciones_masicas.style.set_properties(subset=['Componente'], **{'text-align': 'left'})

# Etapas reales de la columna de rectificacion
Etapas_reales=8

# Tempera de caldera y condensador
Ttop=96
Tbot=72
display(styled_df)

x2=1-x1
y2=1-y1
xD = x_destilado  # Fracción molar del componente ligero en el destilado
xW = x_residuo    # Fracción molar del componente ligero en el residuo
#piso elegido para el calculo de la eficacia de murphy

# yn= 
# xn=
#yn+1=
#xn_1=  #xn-1
#yn*=np.interp(xn, x1, y1)
#xn*= np.interp(yn, y1, x1)
# eficacia_murphy_vapor = yn-yn+1/yn*-yn+1
# eficacia_murphy_liquido = xn_1-xn/xn_1-xn*

# Initial point (total reflux: the first stage is the distillate)
s = np.zeros((200, 2))
s[0, 0] = xD
s[0, 1] = xD  # Move horizontally to the left to find the equilibrium point

for i in range(1, 200):
    # Vertical movement downwards to the diagonal y = x
    s[i, 1] = s[i-1, 0]  # Move vertically down to y = x
    if s[i, 1] <= xW:
        s[i, 0] = s[i, 1]  # In the last stage, y = x = xW
        break
    # Horizontal movement to the equilibrium curve
    s[i, 0] = np.interp(s[i, 1], y1, x1)  # Find the corresponding x on the equilibrium curve


# Clean rows with unnecessary zeros
s = s[~np.all(s == 0, axis=1)]
s_rows = s.shape[0]
# Create a DataFrame to store the stages
data = {
    'Etapa': [],
    'x': [],
    'y': [],
    'linea': []
}

S = np.zeros((s_rows * 2, 2))
for i in range(0, s_rows):
    # Coordenadas horizontales y verticales para cada etapa
    S[i * 2, 0] = s[i, 0]  # x-coordinate of the current stage
    S[i * 2, 1] = s[i, 1]  # y-coordinate of the current stage (equilibrium curve)
    
    if i < s_rows - 1:
        S[i * 2 + 1, 0] = s[i, 0]  # x-coordinate remains the same for vertical movement
        S[i * 2 + 1, 1] = s[i + 1, 1]  # y-coordinate of the next stage (should be greater than current y)
    else:
        S[i * 2 + 1, 0] = s[i, 0]  # Last point, no further stages
        S[i * 2 + 1, 1] = s[i, 0]  # y = x for the last point
        num_stages = s_rows - 1

for i in range(1,s_rows-1):
    data['Etapa'].append(i)
    data['x'].append(s[i, 0])
    data['y'].append(s[i, 1])
    data['linea'].append('curva de equilibrio')
df = pd.DataFrame(data)
x_ult_etapa = data['x'][-1]
x_penult = data['x'][-2]
tolerancia = 1e-5  # Tolerancia para considerar valores casi iguales
if np.abs(x_ult_etapa - x_penult) < tolerancia:
    ultima_etapa_exacta = 0  # No se aplica la regla de la palanca si los valores son iguales o casi iguales
    Nt_etapas = len(data['Etapa'])  # Número total de etapas  
    eficacia_lewis = Nt_etapas / Etapas_reales
else:
    ultima_etapa_exacta = (xW - x_ult_etapa) / (x_penult - x_ult_etapa)
    Nt_etapas = s_rows - 3 + ultima_etapa_exacta      # el -3 viene de que el primer valor no lo pilla por que es justo el punto xd,xd
    eficacia_lewis = Nt_etapas / Etapas_reales        # de ahi un -1, el otro es por que el numero de etapas se definia como el de columnas-1
Etapas_frame=pd.DataFrame({                           # y el ultimo es por que la ultima etapa no se cuenta para poder tomarla exacta
    'etapas teoricas': [len(data['Etapa'])],
    'etapas exactas': [Nt_etapas],
    'etapas teoricas': [Etapas_reales],
    'eficacia de lewis': [eficacia_lewis] #,
    #'eficacia de murphy liquido': [eficacia_murphy_liquido],
    #'eficacia de murphy vapor': [eficacia_murphy_vapor]
})
display(Etapas_frame)
# Graficar el diagrama de McCabe-Thiele
plt.figure(figsize=(8, 6))
plt.plot(x1, y1, label='Curva de Equilibrio', color='blue')
plt.plot([0, 1], [0, 1], color='gray', label='y = x ')
plt.plot(S[:, 0], S[:, 1], color='red', label=f'Etapas ({num_stages})')

# Plot xD and xW points with smaller size
plt.scatter([xD, xW], [xD, xW], color='green', zorder=5, s=0)

# Add dashed lines from the x-axis to the points
plt.plot([xD, xD], [0, xD], color='green', linestyle='--', linewidth=1)
plt.plot([xW, xW], [0, xW], color='green', linestyle='--', linewidth=1)
for i in range(num_stages):
    mid_x = (S[i * 2, 0] + S[i * 2 + 2, 0]) / 2
    y = S[i * 2 + 2, 1]
    plt.text(mid_x, y, f'{i+1}', fontsize=10, verticalalignment='bottom', horizontalalignment='left')
# Add labels on the x-axis
plt.text(xD, -0.015, 'xD',color='green', fontsize=8, verticalalignment='top', horizontalalignment='center')
plt.text(xW, -0.05, 'xW',color='green', fontsize=8, verticalalignment='top', horizontalalignment='center')

# Set y-axis to start at 0
plt.ylim(0, 1)
print(S [0, 0], S [0, 1])
plt.xlabel('Fracción molar del componente ligero en la fase líquida (x)')
plt.ylabel('Fracción molar del componente ligero en la fase de vapor (y)')
plt.title('Método de McCabe-Thiele a Reflujo Total')
plt.legend()
plt.grid(True)
plt.show()
display(df.style.hide(axis='index'))
print(df)